name: CI/CD to EC2 (SSH)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linters & security tools
        run: |
          pip install flake8 bandit safety

      - name: Lint
        run: flake8 .
      - name: Run static analysis (flake8 + pylint)
        run: |
          pip install flake8 pylint
          flake8 . --max-line-length=120 --statistics
          pylint $(git ls-files '*.py') --exit-zero


      - name: Security Vulnerability Scan
        run: |
          pip install bandit safety detect-secrets
          echo "🔍 Running Bandit (Python source code security scan)..."
          bandit -r . -f txt -o bandit-report.txt || true

          echo "🧩 Running Safety (dependency vulnerability check)..."
          safety check -r requirements.txt --full-report || true

          echo "🔑 Checking for hardcoded secrets..."
          detect-secrets scan > detect-secrets-report.json

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Disable host key checking
        run: |
          mkdir -p ~/.ssh
          printf "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          ssh $USER@$HOST '
            set -e
            cd /home/ubuntu/Badminton_DevOps
            git fetch origin
            git reset --hard origin/main
            /home/ubuntu/Badminton_DevOps/venv/bin/pip install -r requirements.txt
            /home/ubuntu/Badminton_DevOps/venv/bin/python manage.py migrate --noinput
            /home/ubuntu/Badminton_DevOps/venv/bin/python manage.py collectstatic --noinput
            nohup /home/ubuntu/Badminton_DevOps/venv/bin/python manage.py runserver 0.0.0.0:8000 > server.log &
            echo "✅ Server restarted successfully"
          ' || true
      - name: Upload analysis reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.txt
            detect-secrets-report.json

